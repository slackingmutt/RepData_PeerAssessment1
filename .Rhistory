y<-rnorm(1000,mean=3)
y
hist(c(x,y))
hist(c(x,y)), col="gray",border="white",breaks=40
hist(c(x,y), col="gray",border="white",breaks=40)
x1<-c(-0.1,0.3,-0.9,0.2,-0.6,-2.3)
x1
x2<-c("red","blue","green","purple")
x2
x3<-x1>0
x3
names(x1)<-c("Justine", "Rachel","Meng","Xiuhua","Whitney","Paul")
x1
names(x10)
namesx1
names(x1)
x1["Justine"]
X<-matrix(x1,nrow=2)
X
x1
matrix(x1,nrow=2, byrow=TRUE)
?rbind
X
X1<-matrix(rnorm(6),ncol=3)
X2,-matrix(rnorm(6),ncol-3)
X2<-matrix(rnorm(6),ncol-3)
X2<-matrix(rnorm(6),ncol=3)
X1
X2
rbind(X1,X2)
cbin(X1,X2)
cbind(X1,X2)
tt<-t.test(1:7,5:10)
tt
?t
?t.test
tt$conf.int
tt$p.value
tips <- read.delim("http://web.as.uky.edu/statistics/users/pbreheny/760/data/tips.txt")
head(tips)
class(tips.TotBill)
class(tips$TotBill)
class(tips$Sex)
?factor
with(tips,mean(TotBill))
mean(TotBill)
?attach
attach(tips)
mean(TotBill)
mean(Tip)
mean(Sex)
detach(tips)
?with
tips
?head
head(tips,n=1L)
tips$Rate<-with(tips,Tip/TotBill)
head(tips,n=1L)
head(tips)
?t
X
t(X)
?t.test
?table
table(tips$Sex)
?levels
levels(tips$Sex)
head(tips)
table(tips$Smoker)
barplot(table(tips$Day))
table(tips$Day)
x1
x1[x1>0]
x1[1:3]
x1[-(5:6)]
x1["Whitney"]
x1["Whitney","Paul"]
x1[c("Whitney","Paul")]
x1
x1[]
tips[tips$Tip>7]
tips
tips[tips$Tip]
head(tips)
head(tips$Tip)
tips[tips$Tip, ]
tips[tips$Tip>=7, ]
?sample
x
x<-sample(1:10,3)
y<-sample(1:10,6)
x
y
x
x+2
x
x+x
x+y
s
x
y
z<-sample(1:10,4)
z
x+z
x<-true
x<-TRUE
x
y<-FALSE
y
x&y
x|y
?seq
seq(0,1,0.2)
seq(0,1,len=5)
rep(1,5)
rep(1:2,2)
rstudio::viewData(tips)
ozone <- read.delim("http://web.as.uky.edu/statistics/users/pbreheny/760/data/ozone.txt")
head(ozone)
rstudio::viewData(ozone)
sum(is.na(ozone$Ozone))
mean(ozone$Ozone)
?na
?is.na
?na.rm
1/0
0/0
?rpois
A<-matrix(rpois(12,3),nrow=4)
A
B<-matrix(rpois(12,3),nrow=4)
B
A*B
A*B+2*A
?crossprod
t(A)%*%B
crossprod(A,B)
LETTERS[1:4]
paste(LETTERS[1:4],1:4)
paste(LETTERS[1:4],1:4,sep="")
a<-paste(LETTERS[1:4],1:4,sep="-")
nchar(a)
substr(a,1,2)
?apply
apply(ozone,2,mean)
?sample
sample(1:10,5)
sample(LETTERS[1:10],5)
?dnorm
?pnorm
require(lattice)
xplot((Tip~TotBill|Smoker,datat=tips))
xplot(Tip~TotBill|Smoker,datat=tips)
xyplot(Tip~TotBill|Smoker,datat=tips)
!head
head(tips)
xyplot(Tip~TotBill,datat=tips)
?xyplot
xylot(tips$Tip~tips$TotBill)
xyplot(tips$Tip~tips$TotBill)
xyplot(Tip~TotBill|Smoker,data=tips)
total<-0
total
for(i in 1:10){}
total<-total+1
}
for(i in 1:10){
total<-total+1
}
total
x=2
x
x=seq(from= -2, to=2, by=0.1)
y=x^2
plot(s,y,type=1)
plot(x,y,type=1)
plot(x,y,type=l)
?plot
plot(x,y,type="l")
dev.copy2eps(file="SimpleGraph.eps")
SimpleGraph.eps
?dev.copy2eps
dev.print("SimpleGraph.eps")
dev.print(file="SimpleGraph.eps")
pwd
?working
??working
getwd
setwd(/users/lingle/R-Development)
WD<-getwd()
WD
demo()
demo(base)
demo(package-base)
demo(package=base)
?demo
demo(scoping)
demo(lm.glm)
getwd()
source(printmsg.R)
dir
dir()
source(~/printmsg.R)
source(printmsg.R)
source("printmsg.R")
printmsg
printmsg(x)
printmsg(18)
printmsg(1)
printmsg
source("printmsg.R")
printmsg(1)
printmsg
?invisible
function(x) x
funct
f1 = function(x) x
f1(0)
f2 = function(x) invisible(x)
f2(0)
?traceback
traceback()
debug(f1)
f1(2)
source("printmsg.R")
printmsg
printmsg(3)
x = 1:5
x
class(x)
str(x)
data(warpbreaks)
names(warpbreaks)
dim(warpbreaks)
sapply(warpbreaks,class)
aov(warpbreaks$breaks~warpbreaks$wool+warpbreaks$tension)
aovObject<-aov(warpbreaks$breaks~warpbreaks$wool+warpbreaks$tension)
aovObject
summary(aovObject)
log(0.2/1-0,2)
log(0.2/1-0.2)
log(0.2/(1-0.2)
)
log(0.2/(1-0.2))
library(glm2)
load(glm2)
library()
library("glm2")
install.packages("glm2")
library(glm2)
data(crabs)
names(crabs)
sapply(crabs,class)
dim(crabs)
head(crabs,2)
glm1 <- glm(crabs$Satellites~crabs$Width, family="poisson")
glm1
glmq4 <- glm(crabs$Satellites~crabs$Width==22, family="poisson")
glmq4
summary(glmq4)
crabs[,crabs$Width==22]
crabs[,"Width"==22]
head(crabs[,"Width"==22])
foo <-crabs$Width==22
head(foo)
sum(foo)
foo <-crabs[,c(Width==22)]
foo <-crabs[,c(crabs$Width==22)]
foo<-crabs[,"Width"]
head(foo)
sort(foo)
foo["Satellites","Width"==22]
dim(foo)
foo<-crabs["Satellites","Width"]
head(foo)
dim(foo)
head(crabs)
crabs
foo<-crabs["Satellites","Width"]
foo
names(crabs)
foo<-crabs["Satellites",]
head(foo)
foo<-crabs[crabs$Satellites,]
head(foo)
foo
foo[,foo$Width==22]
mean(foo$Satellites)
mean(foo[foo$Satellites,foo$Width==22)
mean(foo[foo$Satellites,foo$Width==22])
colMeans(foo[foo$Satellites,foo$Width==22])
foo[foo$Satellites,foo$Width==22]
data(quine)
install.packages("quine")
data(quine)
library()
install.package("mass")
install.packages("mass")
install.packages("MASS")
library(MASS)
data(quine)
lm1 = lm(log(Days + 2.5) ~.,data=quine)
?step
step(lm1)
names(quine)
sapply(quine,class)
glm3 <- glm(crabs$Satellites~crabs$Width, family="poisson")
summary(glm3)
exp(0.16405)
getwd()
setwd("~/Git/datascience/RepData_PeerAssessment1")
iqr(act.day$x)
summary(act.day$x)
getwd()
act <- read.csv("./activity.csv")
act.nona <- na.omit(act)
act.day <- aggregate(act.nona$steps, by=list(act.nona$date),FUN=sum)
summary(act.day$x)
?hist
max(act.day$x)
hist(act.day$x,xlim=0:25000,ylim=0:30,xlab="steps")
hist(act.day$x,breaks="FD")
hist(act.day$x,breaks="FD",xlim=seq(from=0,to=25000,by=5000))
hist(act.day$x,breaks="FD",xlim=seq(from=0,to=25000,by=5000),plot=T)
hist(act.day)
hist(act.day$x,breaks=act.day$Group.1)
hist(act.day$x,breaks=as.Date(act.day$Group.1)
)
hist(act.day$x,breaks=as.Date(act.day$Group.1,%Y-%m-%d))
act.date.2$days <-strptime(act.date$Group.1,"%Y-%m-%d")
act.day.2$days <-strptime(act.day$Group.1,"%Y-%m-%d")
act.day.2 <- act.day
act.day.2$days <-strptime(act.day$Group.1,"%Y-%m-%d")
str(act.day.2)
hist(act.day.2$x, breaks = act.day.2$day)
plot(act.day.2$day, act.day.2.steps)
plot(act.day.2$day, act.day.2$x)
?plot
plot(act.day.2$day, act.day.2$x,type="h")
mean(act.day$x)
hist(act.day$x)
hist(act.day$x,breaks="FD")
hist(act.day$x)
min(act.day$x)
foo <- aggregate(act.nona$steps ~ act.nona$date,max)
foo <- aggregate(act.nona$steps ~ act.nona$date,FUN=max)
View(foo)
rm(foo)
foo <- aggregate(act.nona$steps ~ act.nona$date,FUN=sum)
View(foo)
str(foo)
hist(foo$act.nona$steps)
foo$act.nona$steps <- as.numeric(foo$act.nona$steps)
hist(foo$act.nona$steps)
str(foo)
rm(foo)
foo <- aggregate(act.nona$steps ~ act.nona$date,FUN=sum)
str(foo)
class(foo$2)
class(foo$act.nona$steps)
str(act)
str(act.nona)
class(foo)
str(act.day)
hist(foo$act.nona$steps)
str(foo)
summary(act.nona$steps)
summary(act.day$x)
str(act.day$x)
str(act.day)
hist(act.day$x,xlab=Steps)
hist(act.day$x,xlab="Steps")
hist(act.day$x,xlab="Steps",main="Histogram of Total Number of Steps")
hist(act.day$x,xlab="Steps",main= "Number of Steps Summed by Day")
summary(act$steps)
act.weekend <- act.imput[act.imput$dayofweek == "weekday",]
source('~/.active-rstudio-document', echo=TRUE)
str(act.weekday)
sum(act.weekday$dayofweek in "weekend")
act.weekday$dayofweek in "weekend"
act.weekday$dayofweek %in% "weekend"
"weekend"
weekends
sum(act.weekend %in% weekends)
class(weekends)
class(act.input$dayofweek)
class(act.imput$dayofweek)
act.imput$dayofweek[1]
sum(act.imput$dayofweek == "weekday")
sum(act.imput$dayofweek == "weekend")
str(act.imput)
plot(act.wkendpat$interval, act.wkendpat$x,type="l", main="Weekend")
date <- strptime(act.imput$date,"%Y-%m-%d")
daysofweek <- weekdays(date)
weekends <- daysofweek == "Saturday" | daysofweek == "Sunday"
act.imput$dayofweek <- "weekday"
act.imput[weekends,]$dayofweek <- "weekend"
str(act.imput)
act.weekday <- act.imput[act.imput$dayofweek== "weekend",]
act.weekend <- act.imput[act.imput$dayofweek == "weekday",]
sum(act.imput$dayofweek == "weekday")
sum(act.imput$dayofweek == "weekend")
act.wkdaypat <- aggregate(act.weekday$steps, by=list(as.factor(act.weekday$interval)),
mean)
act.wkdaypat$interval <- act.imput$interval[0:288]
act.wkendpat <- aggregate(act.weekend$steps, by=list(as.factor(act.weekday$interval)),
mean)
act.wkendpat$interval <- act.imput$interval[0:288]
par(mfrow = c(1,2))
plot(act.wkendpat$interval, act.wkendpat$x,type="l", main="Weekend")
plot(act.wkdaypat$interval, act.wkdaypat$x, type="l",main="Weekday")
str(act.wkdaypat)
date <- strptime(act.imput$date,"%Y-%m-%d")
daysofweek <- weekdays(date)
weekends <- daysofweek == "Saturday" | daysofweek == "Sunday"
act.imput$dayofweek <- "weekday"
act.imput[weekends,]$dayofweek <- "weekend"
str(act.imput)
act.weekday <- act.imput[act.imput$dayofweek== "weekend",]
act.weekend <- act.imput[act.imput$dayofweek == "weekday",]
sum(act.imput$dayofweek == "weekday")
sum(act.imput$dayofweek == "weekend")
act.wkdaypat <- aggregate(act.weekday$steps, by=list(as.factor(act.weekday$interval)),
mean)
act.wkdaypat$interval <- act.imput$interval[0:288]
act.wkendpat <- aggregate(act.weekend$steps, by=list(as.factor(act.weekend$interval)),
mean)
act.wkendpat$interval <- act.imput$interval[0:288]
par(mfrow = c(1,2))
plot(act.wkendpat$interval, act.wkendpat$x,type="l", main="Weekend")
plot(act.wkdaypat$interval, act.wkdaypat$x, type="l",main="Weekday")
act.avg <- aggregate(act.nona$steps, by=list(as.factor(act.nona$interval)),mean)
str(act.avg)
plot(act.avg$Group.1,act.avg$x, type="l")
?plot
act.avg <- aggregate(act.nona$steps, by=list(as.factor(act.nona$interval)),mean)
str(act.avg)
par(mfrow = c(1,1))
plot(act.avg$Group.1,act.avg$x, type="l")
act.avg <- aggregate(act.nona$steps, by=list(as.factor(act.nona$interval)),mean)
str(act.avg)
act.avg$interval <- act.nona$interval[0:288]
par(mfrow = c(1,1))
plot(act.avg$Group.1,act.avg$x, type="l")
act.avg <- aggregate(act.nona$steps, by=list(as.factor(act.nona$interval)),mean)
str(act.avg)
act.avg$interval <- act.nona$interval[0:288]
par(mfrow = c(1,1))
plot(act.avg$interval,act.avg$x, type="l")
act.avg <- aggregate(act.nona$steps, by=list(as.factor(act.nona$interval)),mean)
str(act.avg)
act.avg$interval <- act.nona$interval[0:288]
par(mfrow = c(1,1))
plot(act.avg$interval,act.avg$x, type="l",xlab="Number of Steps",ylab="Average Number of Steps")
?plot
library("lattice", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
str(act.imput)
xyplot(act$steps ~ act$dayofweek)
xyplot(steps~dayofweek,data=act.imput)
tplot <- xyplot(steps~dayofweek,data=act.imput)
print(tplot)
plot(steps~dayofweek,data=act.imput)
plot(act.imput$days~act.imput$dayofweek)
plot(act.imput$steps~act.imput$dayofweek)
tplot <- xyplot(steps~interval,data=act.imput)
print(tplot)
tplot <- xyplot(steps~interval,data=act.imput | dayofweek)
tplot <- xyplot(steps~interval,data=act.imput| dayofweek)
tplot <- xyplot(steps~interval | dayofweek, data = act.imput)
print(tplot)
tplot <- xyplot(steps~interval | dayofweek, data = act.imput, layout=c(1,2))
print(tplot)
tplot <- xyplot(steps~interval | dayofweek, data = act.imput, layout=c(1,2),type = "l")
print(tplot)
tplot <- xyplot(steps~interval | dayofweek, data = act.imput, layout=c(1,2))
act.lattice <- aggregate(act.imput$steps, by= list(as.factor(act.imput$interval)),mean)
str(act.lattice)
str(act.imput)
act.lattice$dayofweek <- act.imput$dayofweek
act.lattice <- aggregate(act.imput$steps, by= list(as.factor(act.imput$dayofweek)),mean)
str(act.lattice)
act.lattice <- aggregate(act.imput$steps, by= list(as.factor(act.imput$date)),mean)
str(act.lattice)
str(act.wkendpat)
fooplot <- xyplot(x~interval| dayofweek, data = act.wkdaypat,type="l")
fooplot <- xyplot(x~interval, data = act.wkdaypat,type="l")
print(fooplot)
fooplot2 <- xyplot(x~interval, data = act.wkendpat,type="l")
print(fooplot2)
act.wkendpat$dayofweek <- "weekend"
act.wkdaypat$dayofweek <- "weekday"
str)act.wkendpat
str(act.wkendpat)
str(act.wkdaypat)
foo <- cbind(act.wkdatpat,act.wkendpat)
foo <- cbind(act.wkdaypat,act.wkendpat)
str(foo)
foo <- rbind(act.wkdaypat,act.wkendpat)
str(foo)
tfoo <- xyplot(interval~x|dayofweek,data=foo, type="l")
print(tfoo)
tfoo <- xyplot(x~interval|dayofweek,data=foo, type="l")
print(tfoo)
tfoo <- xyplot(x~interval|dayofweek,data=foo, type="l",layout=c(1,2))
print(tfoo)
View(act.wkendpat)
names(foo$x) <- "steps"
str(foo)
names(foo)
names(foo$x)
tfoo <- xyplot(x~interval|dayofweek,data=foo, type="l",layout=c(1,2),ylab="steps")
print(tfoo)
